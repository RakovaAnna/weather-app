{"version":3,"sources":["App.module.css","components/WeatherCard/WeatherCard.module.css","components/MiniDayCard/MiniDayCard.module.css","components/DetailedCard/DetailedCard.module.css","redux/actionType.js","redux/actionsCreators.js","components/ChooseCityForm/ChooseCityForm.js","utils/getDaysInfo.js","components/DetailedCard/DetailedCard.js","components/MiniDayCard/MiniDayCard.js","components/WeatherCard/WeatherCard.js","App.js","serviceWorker.js","utils/autoLayoutKeyboard.js","utils/local.js","api.js","redux/sagas/nextDaysSaga.js","redux/reducer.js","redux/sagas/nowInfoSaga.js","redux/sagas/allWeatherSaga.js","redux/store.js","index.js"],"names":["module","exports","actionType","setCity","city","type","payload","setNowInfo","nowInfo","setNextDays","nextDays","setMessage","message","ChooseCityForm","state","onCityChange","e","setState","target","value","onSubmit","preventDefault","props","onSetCity","this","className","name","placeholder","onChange","Component","ChooseCity","connect","dispatch","weekdayName","ms","Date","toLocaleString","weekday","monthDay","toLocaleDateString","day","month","iconWeather","icon","DetailedCard","baseData","main","dt","dayInfo","imgURL","weather","time","toLocaleTimeString","hour","minute","style","weatherBase","temperature","Math","round","temp","detailsWeather","feels_like","src","width","height","alt","description","tableWeather","trWeather","thTitle","thDetail","temp_max","temp_min","humidity","pressure","wind","speed","React","MiniDayCard","func","dayWeather","WeatherCard","controlTab","formatCards","map","index","key","onToday","onFetchDataNow","onNextDays","onFetchDataNextDays","isToday","toolbar","onClick","titleCard","error","WeatherCardComp","fetchDataNow","fetchDataNextDays","App","titleMain","container","Boolean","window","location","hostname","match","replacerRu","ruLayoutKeyboard","str","replace","x","toLowerCase","toUpperCase","mesCityNotFound","api","fetch","process","then","data","json","fetchWeatherNextDaysAsync","watchFetchNextDaysWeather","newState","cod","list","filter","reading","dt_txt","includes","currentDate","getDate","getMonth","getFullYear","daysInfo","call","put","cityRu","dataRu","takeEvery","fetchNowWeatherAsync","watchFetchNowWeather","now","getTimezoneOffset","timezone","info","infoRu","allWeather","all","initialState","undefined","weatherNextDays","sagaMiddleware","createSagaMiddleware","store","createStore","action","composeWithDevTools","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.d506d555.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__3XML-\",\"card-weather\":\"App_card-weather__18HBW\",\"container\":\"App_container__29yai\",\"titleMain\":\"App_titleMain__kYBcB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container-fluid\":\"WeatherCard_container-fluid__1yEW6\",\"error\":\"WeatherCard_error__3UQme\",\"toolbar\":\"WeatherCard_toolbar__2C3Pw\",\"titleCard\":\"WeatherCard_titleCard__3s28p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dayWeather\":\"MiniDayCard_dayWeather__uTJMV\",\"cardText\":\"MiniDayCard_cardText__38QO1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DetailedCard\":\"DetailedCard_DetailedCard__34P_O\",\"baseData\":\"DetailedCard_baseData__3s1Hp\",\"detailsWeather\":\"DetailedCard_detailsWeather__2uYl2\",\"row\":\"DetailedCard_row__30ybG\",\"temperature\":\"DetailedCard_temperature__2bqKn\",\"tableWeather\":\"DetailedCard_tableWeather__3p0t0\",\"trWeather\":\"DetailedCard_trWeather__1dqvc\",\"weatherBase\":\"DetailedCard_weatherBase__2iH0Y\",\"thTitle\":\"DetailedCard_thTitle__1ZY1L\",\"thDetail\":\"DetailedCard_thDetail__2VpBZ\"};","export const actionType = {\r\n    SET_CITY: \"SET_CITY\",\r\n    SET_NOW_INFO: \"SET_NOW_INFO\",\r\n    SET_NEXT_DAYS: \"SET_NEXT_DAYS\",\r\n    SET_MESSAGE: \"SET_MESSAGE\",\r\n    FETCH_DATA_NOW: \"FETCH_DATA_NOW\",\r\n    FETCH_DATA_NEXT_DAYS: \"FETCH_DATA_NEXT_DAYS\"\r\n}","import {actionType} from \"./actionType\";\r\n\r\nexport const setCity = (city) => {\r\n    return {\r\n        type: actionType.SET_CITY,\r\n        payload: {\r\n            city,\r\n        }\r\n    };\r\n};\r\n\r\nexport const setNowInfo = (nowInfo) => {\r\n    return {\r\n        type: actionType.SET_NOW_INFO,\r\n        payload: {\r\n            nowInfo,\r\n        }\r\n    };\r\n}\r\n\r\nexport const setNextDays = (nextDays) => {\r\n    return {\r\n        type: actionType.SET_NEXT_DAYS,\r\n        payload: {\r\n            nextDays,\r\n        }\r\n    };\r\n}\r\n\r\nexport const setMessage = (message) => {\r\n    return {\r\n        type: actionType.SET_MESSAGE,\r\n        payload: {\r\n            message\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchDataNow = (city) => {\r\n    return {\r\n        type: actionType.FETCH_DATA_NOW,\r\n        payload: {\r\n            city\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchDataNextDays = (city) => {\r\n    return {\r\n        type: actionType.FETCH_DATA_NEXT_DAYS,\r\n        payload: {\r\n            city\r\n        }\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport s from './ChooseCityForm.module.css';\r\nimport {fetchData, setCity} from \"../../redux/actionsCreators\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass ChooseCityForm extends Component {\r\n\r\n    state = {\r\n        city: '',\r\n    }\r\n\r\n    onCityChange = (e) => {\r\n        this.setState({\r\n            city: e.target.value,\r\n        });\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onSetCity(this.state.city);\r\n        this.setState({\r\n            city: \"\",\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {city} = this.state;\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col col-sm-12\">\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"input-group input-group-lg\">\r\n                            <input type=\"text\" name=\"city\" className=\"form-control\" placeholder=\"Выбор города\"\r\n                                   value={city} onChange={this.onCityChange}/>\r\n                            <div className=\"input-group-append\">\r\n                                <button className=\"btn btn-secondary\">Узнать погоду</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ...state,\r\n        city: state.city\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSetCity: (city) => dispatch(setCity(city)),\r\n    }\r\n}\r\n\r\nexport const ChooseCity = connect(mapStateToProps, mapDispatchToProps)(ChooseCityForm);\r\n","export function weekdayName(ms) {\r\n    return new Date(ms).toLocaleString('ru', {weekday: 'long'});\r\n}\r\n\r\nexport function monthDay(ms) {\r\n    return new Date(ms).toLocaleDateString(\"ru\", {day: 'numeric', month: 'long'});\r\n}\r\n\r\nexport function iconWeather(icon) {\r\n    return \"http://openweathermap.org/img/wn/\" + icon + \"@4x.png\";\r\n}\r\n\r\nexport function today() {\r\n    const currentDate = new Date();\r\n    const day = currentDate.getDate();\r\n    const month = currentDate.getMonth()+1;\r\n    const year = currentDate.getFullYear();\r\n\r\n    return year + '-' + (month < 10 ? '0' : '') + month + '-' + (day < 10 ? '0' : '') + day;\r\n}\r\n","import React from \"react\";\r\nimport style from './DetailedCard.module.css';\r\n\r\nimport * as dayInfo from '../../utils/getDaysInfo';\r\n\r\nclass DetailedCard extends React.Component {\r\n    render() {\r\n        const {day} = this.props;\r\n        if (day) {\r\n            const {main: baseData} = day;\r\n            const ms = day.dt * 1000;\r\n            const weekdayName = dayInfo.weekdayName(ms);\r\n            const monthDay = dayInfo.monthDay(ms);\r\n            const imgURL = dayInfo.iconWeather(day.weather[0].icon);\r\n            const time = new Date(this.props.time).toLocaleTimeString(\"ru\", {hour: 'numeric', minute: 'numeric'});\r\n            return (\r\n                <div className={style.DetailedCard}>\r\n                    <p className={style.baseData}>{weekdayName}, {monthDay} {time}</p>\r\n                    <div className={`row align-items-center ${style.weatherBase}`}>\r\n                        <div className=\"col-sm-6 align-self-center\">\r\n                            <p className={style.temperature}>{Math.round(baseData.temp)}°</p>\r\n                            <p className={style.detailsWeather}>По ощущениям: {Math.round(baseData.feels_like)} °C</p>\r\n                        </div>\r\n                        <div className=\"col-sm-6 align-self-center\">\r\n                            <img src={imgURL} width=\"200\" height=\"200\" alt={day.weather[0].description}/>\r\n                            <p className={style.detailsWeather}>{day.weather[0].description}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-12 align-self-center\">\r\n                            <table className={style.tableWeather}>\r\n                                <tbody>\r\n                                <tr className={style.trWeather}>\r\n                                    <td><p className={style.thTitle}>Макс/мин температура</p></td>\r\n                                    <td><p className={style.thDetail}>{Math.round(baseData.temp_max)}° / {Math.round(baseData.temp_min)}°</p></td>\r\n                                    <td><p className={style.thTitle}>Влажность</p></td>\r\n                                    <td><p className={style.thDetail}>{baseData.humidity}%</p></td>\r\n                                </tr>\r\n                                <tr className={style.trWeather}>\r\n                                    <td><p className={style.thTitle}>Атмосферное давление</p></td>\r\n                                    <td><p className={style.thDetail}>{Math.round(baseData.pressure/1.333)} мм.рт.ст.</p></td>\r\n                                    <td><p className={style.thTitle}>Скорость ветра</p></td>\r\n                                    <td><p className={style.thDetail}>{day.wind.speed}м/с</p></td>\r\n                                </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className={style.DetailedCard}>\r\n                    <p className={style.baseData}>Сегодня</p>\r\n                </div>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default DetailedCard;","import React from \"react\";\r\nimport * as func from '../../utils/getDaysInfo';\r\nimport style from './MiniDayCard.module.css';\r\n\r\nclass MiniDayCard extends React.Component {\r\n    render() {\r\n        const {day} = this.props;\r\n        const ms = day.dt * 1000;\r\n        const weekdayName = func.weekdayName(ms);\r\n        const monthDay = func.monthDay(ms);\r\n        const imgURL = func.iconWeather(day.weather[0].icon);\r\n\r\n        return (\r\n            <div className=\"col-sm\">\r\n                <div className={style.dayWeather}>\r\n                    <h4>{weekdayName},</h4>\r\n                    <h5>{monthDay}</h5>\r\n                    <img src={imgURL} width=\"150\" height=\"150\"  alt={day.weather[0].description}/>\r\n                    <h2>{Math.round(day.main.temp)} °C</h2>\r\n                    <div>\r\n                        <p className=\"card-text\">{day.weather[0].description}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MiniDayCard;","import React from \"react\";\r\nimport style from './WeatherCard.module.css';\r\nimport DetailedCard from \"../DetailedCard/DetailedCard\";\r\nimport MiniDayCard from \"../MiniDayCard/MiniDayCard\";\r\nimport {fetchDataNextDays, fetchDataNow} from \"../../redux/actionsCreators\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass WeatherCard extends React.Component {\r\n\r\n    state = {\r\n        controlTab: true,\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {city, onFetchDataNow} = this.props;\r\n        onFetchDataNow(city);\r\n    }\r\n\r\n    formatCards = () => {\r\n        return this.props.nextDays.map((day, index) => <MiniDayCard day={day} key={index}/>)\r\n    }\r\n\r\n    onToday = () => {\r\n        if (!this.state.controlTab) {\r\n            this.setState({\r\n                controlTab: true,\r\n            });\r\n        }\r\n        if (!this.props.nowInfo.time) {\r\n            this.props.onFetchDataNow(this.props.city);\r\n        }\r\n    }\r\n\r\n    onNextDays = () => {\r\n        if (this.state.controlTab) {\r\n            this.setState({\r\n                controlTab: false,\r\n            });\r\n        }\r\n        if (!this.props.nextDays) {\r\n            this.props.onFetchDataNextDays(this.props.city);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {city, nowInfo, nextDays, message} = this.props;\r\n        const isToday = this.state.controlTab;\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <div className={`row align-items-center ${style.toolbar}`}>\r\n                        <div className=\"col-sm-6\">\r\n                            <button className={`${isToday ? 'btn btn-secondary' : 'btn btn-outline-secondary'}`} onClick={this.onToday}>На сегодня\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"col-sm-6\">\r\n                            <button className={`${!isToday ? 'btn btn-secondary' : 'btn btn-outline-secondary'}`} onClick={this.onNextDays}>На несколько дней\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <h2 className={style.titleCard}>Погода в городе \"{city}\"</h2>\r\n                    <p className={style.error}>{message}</p>\r\n\r\n                    <div>\r\n                        {(this.state.controlTab && nowInfo) &&\r\n                        <DetailedCard day={nowInfo.weather} city={city} time={nowInfo.time}/>\r\n                        }\r\n                        {(!this.state.controlTab && nextDays) &&\r\n                        <div className=\"row justify-content-center \">\r\n                            <div className=\"col-sm-8\">\r\n                                <div className=\"row align-items-center\">\r\n                                    {this.formatCards()}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ...state,\r\n        nowInfo: {\r\n            time: state.nowInfo.time,\r\n            weather: state.nowInfo.weather\r\n        },\r\n        nextDays: state.nextDays,\r\n        message: state.message\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onFetchDataNow: (city) => dispatch(fetchDataNow(city)),\r\n        onFetchDataNextDays: (city) => dispatch(fetchDataNextDays(city)),\r\n    }\r\n}\r\n\r\nexport const WeatherCardComp = connect(mapStateToProps, mapDispatchToProps)(WeatherCard);","import React from 'react';\r\nimport style from './App.module.css';\r\nimport {ChooseCity} from \"./components/ChooseCityForm/ChooseCityForm\";\r\nimport {WeatherCardComp} from \"./components/WeatherCard/WeatherCard\";\r\n\r\nexport class App extends React.Component {\r\n\r\n    render() {\r\n        const {props} = this;\r\n        return (\r\n            <div className={`${style.main}`}>\r\n                <h1 className={style.titleMain}>Прогноз погоды</h1>\r\n                <div className={`${style.container} container-fluid`}>\r\n                    <ChooseCity/>\r\n                    <WeatherCardComp/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const replacerRu = {\r\n    \"q\": \"й\", \"w\": \"ц\", \"e\": \"у\", \"r\": \"к\", \"t\": \"е\", \"y\": \"н\", \"u\": \"г\",\r\n    \"i\": \"ш\", \"o\": \"щ\", \"p\": \"з\", \"[\": \"х\", \"]\": \"ъ\", \"a\": \"ф\", \"s\": \"ы\",\r\n    \"d\": \"в\", \"f\": \"а\", \"g\": \"п\", \"h\": \"р\", \"j\": \"о\", \"k\": \"л\", \"l\": \"д\",\r\n    \";\": \"ж\", \"'\": \"э\", \"z\": \"я\", \"x\": \"ч\", \"c\": \"с\", \"v\": \"м\", \"b\": \"и\",\r\n    \"n\": \"т\", \"m\": \"ь\", \",\": \"б\", \".\": \"ю\", \"/\": \".\"\r\n};\r\n\r\nconst replacerEn = {\r\n    \"й\":\"q\", \"ц\":\"w\", \"у\":\"e\", \"к\":\"r\", \"е\":\"t\", \"н\":\"y\", \"г\":\"u\",\r\n    \"ш\":\"i\", \"щ\":\"o\", \"з\":\"p\", \"х\":\"[\", \"ъ\":\"]\", \"ф\":\"a\", \"ы\":\"s\",\r\n    \"в\":\"d\", \"а\":\"f\", \"п\":\"g\", \"р\":\"h\", \"о\":\"j\", \"л\":\"k\", \"д\":\"l\",\r\n    \"ж\":\";\", \"э\":\"'\", \"я\":\"z\", \"ч\":\"x\", \"с\":\"c\", \"м\":\"v\", \"и\":\"b\",\r\n    \"т\":\"n\", \"ь\":\"m\", \"б\":\",\", \"ю\":\".\", \".\": \"/\"\r\n};\r\n\r\nexport function ruLayoutKeyboard(str) {\r\n    return str.replace(/[A-z/,.;\\'\\]\\[]/g, function (x) {\r\n        return x == x.toLowerCase() ? replacerRu[x] : replacerRu[x.toLowerCase()].toUpperCase();\r\n    });\r\n}\r\n\r\nexport function enLayoutKeyboard(str) {\r\n    return str.replace(/[А-я/,.;\\'\\]\\[]/g, function (x) {\r\n        return x == x.toLowerCase() ? replacerEn[x] : replacerEn[x.toLowerCase()].toUpperCase();\r\n    });\r\n}\r\n","export const API_KEY = process.env.REACT_APP_WEATHER_API_KEY;\r\nexport const units = \"metric\";\r\nexport const lang = \"ru\";\r\n\r\nexport function mesCityNotFound(city) {\r\n    return `Город \"${city}\" не найден`\r\n}","import {API_KEY, lang, units} from \"./utils/local\";\r\n\r\nexport const api = {\r\n    loadNextDaysWeather: (city) => {\r\n        return fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${API_KEY}&units=${units}&lang=${lang}`)\r\n            .then((data) => data.json())\r\n    },\r\n\r\n    loadNowWeather: (city) => {\r\n        return fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=${units}&lang=${lang}`)\r\n            .then((data) => data.json())\r\n    }\r\n}","import React from \"react\";\r\nimport {ruLayoutKeyboard, enLayoutKeyboard} from \"../../utils/autoLayoutKeyboard\";\r\nimport {call, put, takeEvery} from \"redux-saga/effects\";\r\nimport {setCity, setMessage, setNextDays} from \"../actionsCreators\";\r\nimport * as daysInfo from \"../../utils/getDaysInfo\";\r\nimport {api} from '../../api';\r\nimport {mesCityNotFound} from \"../../utils/local\";\r\nimport {actionType} from \"../actionType\";\r\n\r\nconst newState = (data) => {\r\n    if (data.cod === '200') {\r\n        return data.list.filter(reading => reading.dt_txt.includes(\"12:00:00\") && !(reading.dt_txt.includes(daysInfo.today())));\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function* fetchWeatherNextDaysAsync({payload}) {\r\n    const {city} = payload;\r\n    try {\r\n        const data = yield call(api.loadNextDaysWeather, city);\r\n        const nextDays = newState(data);\r\n        if (nextDays !== null) {\r\n            yield put(setNextDays(nextDays));\r\n        } else {\r\n            const cityRu = ruLayoutKeyboard(city);\r\n            const dataRu = yield call(api.loadNextDaysWeather, cityRu);\r\n            const daysRU = newState(dataRu);\r\n            if (daysRU) {\r\n                yield put(setCity(cityRu));\r\n                yield put(setNextDays(nextDays));\r\n            } else {\r\n                yield put(setMessage(mesCityNotFound(city)));\r\n            }\r\n        }\r\n    } catch {\r\n        yield put(setMessage(mesCityNotFound(city)));\r\n    }\r\n}\r\n\r\nexport function* watchFetchNextDaysWeather() {\r\n    yield takeEvery(actionType.FETCH_DATA_NEXT_DAYS, fetchWeatherNextDaysAsync);\r\n}","import {initialState} from \"./store\";\r\nimport {actionType} from \"./actionType\";\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionType.SET_CITY:\r\n            return {\r\n                ...initialState,\r\n                city: action.payload.city,\r\n            };\r\n        case actionType.SET_NOW_INFO:\r\n            return {\r\n                ...state,\r\n                nowInfo: action.payload.nowInfo,\r\n            };\r\n        case actionType.SET_NEXT_DAYS:\r\n            return {\r\n                ...state,\r\n                nextDays: action.payload.nextDays\r\n            };\r\n        case actionType.SET_MESSAGE:\r\n            return {\r\n                ...state,\r\n                message: action.payload.message\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};","import {all, call, put, takeEvery} from \"@redux-saga/core/effects\";\r\nimport {api} from \"../../api\";\r\nimport {setCity, setMessage, setNowInfo} from \"../actionsCreators\";\r\nimport {ruLayoutKeyboard} from \"../../utils/autoLayoutKeyboard\";\r\nimport {mesCityNotFound} from \"../../utils/local\";\r\nimport {watchFetchNextDaysWeather} from \"./nextDaysSaga\";\r\nimport {actionType} from \"../actionType\";\r\n\r\nconst newState = (data) => {\r\n    if (data.cod !== '404') {\r\n        const time = Date.now() + new Date().getTimezoneOffset() * 60 * 1000 + data.timezone * 1000;\r\n        return {\r\n            nowInfo: {\r\n                time,\r\n                weather: data\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function* fetchNowWeatherAsync({payload}) {\r\n    const {city} = payload;\r\n    try {\r\n        const data = yield call(api.loadNowWeather, city);\r\n        const info = newState(data);\r\n        if (info !== null) {\r\n            yield put(setNowInfo(info.nowInfo));\r\n        } else {\r\n            const cityRu = ruLayoutKeyboard(city);\r\n            const dataRu = yield call(api.loadNowWeather, cityRu);\r\n            const infoRu = newState(dataRu);\r\n            if (infoRu) {\r\n                yield put(setCity(cityRu));\r\n                yield put(setNowInfo(infoRu.nowInfo));\r\n            } else {\r\n                yield put(setMessage(mesCityNotFound(city)));\r\n            }\r\n        }\r\n    } catch {\r\n        yield put(setMessage(mesCityNotFound(city)));\r\n    }\r\n}\r\n\r\nexport function* watchFetchNowWeather() {\r\n    yield takeEvery(actionType.SET_CITY, fetchNowWeatherAsync);\r\n    yield takeEvery(actionType.FETCH_DATA_NOW, fetchNowWeatherAsync);\r\n}","import {all} from \"redux-saga/effects\";\r\nimport {watchFetchNowWeather} from \"./nowInfoSaga\";\r\nimport {watchFetchNextDaysWeather} from \"./nextDaysSaga\";\r\n\r\nexport function* allWeather() {\r\n    yield all([\r\n        watchFetchNowWeather(),\r\n        watchFetchNextDaysWeather()\r\n    ])\r\n}","import {applyMiddleware, createStore} from 'redux'\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport {watchFetchWeather} from \"./sagas/nextDaysSaga\";\r\nimport {reducer} from \"./reducer\";\r\nimport {allWeather} from \"./sagas/allWeatherSaga\";\r\n\r\nexport let initialState = {\r\n    city: \"Пермь\",\r\n    nowInfo: {\r\n        time: undefined,\r\n        weather: undefined\r\n    },\r\n    weatherNextDays: [],\r\n    message: undefined\r\n};\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport const store = createStore(reducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\r\nsagaMiddleware.run(allWeather);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {App} from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {store} from \"./redux/store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </React.StrictMode>\r\n,\r\ndocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}